JYTTemplateFormatVersion: 2017-12-05
Description: >-
  Description .....
Parameters:
  KeyName:
    Description: Name of an existing KeyPair to enable SSH access to the instance
    Valid: # boolean
    Type: String
  SSHLocation:
    Description: The IP address range that can be used to SSH
    Valid: # boolean
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
  DBName:
    Description: MySQL database name
    Valid: # boolean
    Type: String
    MinLength: '6'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
  DBUser:
    Description: Username for MySQL database access
    Valid: # boolean
    Type: String
    MinLength: '6'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
  DBPassword:
    Description: Password for MySQL database access
    Valid: # boolean
    Type: secureString
    MinLength: '6'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z0-9]*'
  DBRootPassword:
    Description: Root password for MySQL
    Valid: # boolean
    Type: secureString
    MinLength: '6'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z0-9]*'
  DBsize:
    Description: Size of DataBase for MySQL in MB
    Valid: # boolean
    Type: int
  StorageUser:
    Description: Username for Storage access
    Valid: # boolean
    Type: String
    MinLength: '6'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
  StoragePassword:
    Description: Password for Storage access
    Valid: # boolean
    Type: secureString
    MinLength: '6'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z0-9]*'
  Storage Size:
    Description: storage size in GB.
    Valid: # boolean
    Type: int
  vmName: 
    Description: Name of Virtual Machine
    Valid: # boolean
    Type: String
  vmAdminUser:
    Description: Username for Virtual Machine
    Valid: # boolean
    Type: String
    MinLength: '6'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
  vmAdminPassword:
    Description: Password for Virtual Machine access
    Valid: # boolean
    Type: secureString
    MinLength: '6'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z0-9]*'
  SecurityGroupName: 
    Description: Name of Security Group Name
    Valid: # boolean
    Type: String
  NetworkInterfaceName: 
    Description: Name of Network Interface Name
    Valid: # boolean
    Type: String  
  DomainDNSName:
    Description: >-
      Fully qualified domain name (FQDN) of the forest root domain e.g.
      corp.example.com
    Valid: # boolean
    Type: String
    MinLength: '3'
    MaxLength: '25'
    AllowedPattern: '[a-zA-Z0-9]+\..+'
  DomainNetBIOSName:
    Description: >-
      NetBIOS name of the domain (upto 15 characters) for users of earlier
      versions of Windows e.g. CORP
    Valid: # boolean
    Type: String
    MinLength: '1'
    MaxLength: '15'
    AllowedPattern: '[a-zA-Z0-9]+'
  RestoreModePassword:
    Description: >-
      Password for a separate Administrator account when the domain controller
      is in Restore Mode. Must be at least 8 characters containing letters,
      numbers and symbols
    
      Valid: # boolean
    Type: String
    MinLength: '8'
    MaxLength: '32'
    AllowedPattern: >-
      (?=^.{6,255}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*
    NoEcho: 'True'
  SourceCidrForRDP:
    Description: >-
      IP Cidr from which you are likely to RDP into the instances. You can add
      rules later by modifying the created security groups e.g. 54.32.98.160/32
    
    Valid: # boolean
    Type: String
    MinLength: '9'
    MaxLength: '18'
    AllowedPattern: '^([0-9]+\.){3}[0-9]+\/[0-9]+$'

  VPCSelection:
    Description: >-
      This setting will control if the Cloudformer Web server will launch in the
      default VPC or if a new VPC will be created, or if you wish to launch into
      an existing non-default VPC.
    Type: String
    Default: CreateNewVPC
    AllowedValues:
      - Default
      - CreateNewVPC
    ConstraintDescription: must be either Default or CreateNewVPC

Variables:
  vCPU: !FindInMap 
        - AWSVMtoCPURAM
        - !Ref 'AWS_Instance_Type'
        - !FindInMap 
          - vCPU
  RAM:  !FindInMap 
        - AWSVMtoCPURAM
        - !Ref 'AWS_Instance_Type'
        - !FindInMap 
          - RAM
  Price: !FindInMap 
         - AWStoVMCPURAM
         - !Ref 'AWS_Instance_Type'
         - !FindInMap 
          - Price

  vCPUtype:       # string (e.g., Intel Xeon)
  Volume:         # integer (in GB)

  subnetID:       # string
  subnetName:     # string
  subnetPrefix:   # string (e.g., "10.0.0.0/24")
  addressPrefix:  # string (e,g., "10.0.0.0/16")
  publicDomainName: #string (e.g., "myPublicIP")
  publicIPAddressType: #string (e.g., Dynamic)
  NumWebServer:   # int



Resources:
  VirtualMachine:
    Name: !Ref vmName
    Properties:
      OStype: 'Ubuntu'
      OSversion: '16.04 LTS'
      OSPublisher: 'Canonical'
      Arch: 'x86_64' 

      SecurityGroups:
        - !Ref SercurityGroup
      KeyName: !Ref KeyName
      DependsOn:
        - !Ref SecurityGroup
        - !Ref NetworkInterface
        - !Ref StorageAccount
      osProfile:
        name: !Ref vmName
        adminUser: !Ref vmAdminUser
        adminPassword: !Ref vmAdminPassword
      vmSize: !Ref Volume
      networkProfile:
        !Ref NetworkInterface
      Packages: 
        - 'apache2'
        - 'mysql'
        - 'php'
    Metadata:

  StorageAccount:
    name: #string
    properties:
      user: !Ref StorageUser
      password: !Ref StoragePassword

  Database:
      Properties:
      Engine: MySQL
      DBName: !Ref DBName
      MultiAZ: !Ref MultiAZDatabase
      MasterUsername: !Ref DBUser
      MasterUserPassword: !Ref DBPassword
      DBInstanceClass: !Ref DBInstanceClass
      AllocatedStorage: !Ref DBAllocatedStorage
      VPCSecurityGroups:
        - !GetAtt 
          - DBEC2SecurityGroup
          - GroupId

  NetworkInterface:
    name: !Ref NetworkInterfaceName
    DependsOn: !Ref VirtualNetworks
    Properties:
      ipConfigurations:
        name: # string
        properties:
          privateIPAllocationMethod: Dynamic
          publicIPAddress : !Ref publicDomainName
          subnet:
            id: !Ref subnetID

  VirtualNetworks:
    name: # string
    properties:
      addressPrefixes: !Ref addressPrefix
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      dnsServer: # string
      subnets:
        name: !Ref subnetName

  Subnet:
    name: # string
    Properties:
      addressPrefix: 10.10.10.0/24
      networkSecurityGroup: 
        name: # string

  NetworkSecurityGroup:
    name: !Ref SecurityGroupName
    Properties:
      GroupDescription: Enable HTTP access via port 80
      SecurityGroupIngress:
        IpProtocol: tcp
        SourcePortRange: '80'
        DestinationPortRange: '80'
        SourceAddressPrefix: 0.0.0.0/0
        DestinationAddressPrefix: 0.0.0.0/0
        access: Allow
        direction: Inboound
        priority: 100

  LoadBalancer:
    name: # string
    Properties:
      frontendIPConfigurations:
        priorities:
          privateIPaddress: # string
          privateIPAllocationMethod: # string
          subnets: 
            name:
          publicIPAddress:
            name: # string
            priorities:
              publicIPAllocationMethod: # string
              publicIPAddressVersion: # string
              dnsSetting:
                domainNameLabel: # string
                fqdn: # string
                reverseFqdn: # string
            ipAddress: # string
            idleTimeoutInMinutes: # int
      backendAddressPools:
        name:
      loadBalancingRules:
        name: # string
        properties:
          frontendIPConfigurations:
            name: # string
          backendAddressPools:
            name: # string
          protocol: # string
          loadDistribution: # string
          frontendPort: # int
          backendPort: # int
          idleTimeoutInMinutes: # int
          enableFloatingIP: # boolean
      probes:
        name: # string
        properties:
          protocol: # string
          port: # int
          intervalInSeconds: # int
          numberOfProbes: # int
          requestPath: # string
      inBoundNatRules:
        name: # string
        properties:
          frontendIPConfiguration:
            name: # string
          protocol: # string
          frontendPort: # int
          backendPort: # int
          idleTimeoutInMinutes: # int
          enableFloatingIP: # boolean
      inBoundNatPools:
        name: # string
        properties:
          frontendIPConfiguration:
            name: # string
          protocol: # sring
          frontendPortRangeStart: # int
          frontendPortRangeEnd: # int
          backendPort: # int

  Gateway:
    name: # string
    properties:
      ipConfigurations:
        name: # string
        properties:
          privateIPAllocationMethod: # string
          subnet:
            name: # string
          publicIPAddress:
            name: # string
      gatewayType: # string
      vpnType: # string
      enableBgp: # boolean
      activeActice: # boolean
      gatewatDefaultSite:
        name: # string
      sku:
        name: # string
        tier: # string
        capacity: # int
      vpnClientConfiguration:
        vpnClientAddressPool:
          addressPresfixes: # string 
        vpnClientRootCertifiecates:
          name: # string
          properties:
            publicCertData: # string
        vpnClientRevokedCertificates:
          name: # string
          properties:
            thumbprint: # string
      bgpSettings:
        asn: # int
        bgpPeeringAddress: # string
        peerWeight: # int

  WebServerGroup:
    Properties:
      VPCZoneIdentifier: !Ref Subnets
      LaunchConfigurationName: !Ref LaunchConfig
      MinSize: '1'
      MaxSize: '5'
      DesiredCapacity: !Ref WebServerCapacity
      TargetGroupARNs:
        - !Ref ALBTargetGroup
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: '1'
        MaxBatchSize: '1'
        PauseTime: PT15M
        WaitOnResourceSignals: 'true'
  LaunchConfig:
    Properties:
      SecurityGroups:
        - !Ref WebServerSecurityGroup
      KeyName: !Ref KeyName

 

Mappings:
  AWSVMtoCPURAM:
    t2.nano:
      vCPU:  1            # in GiB
      RAM:   0.5          # in GiB
      Price: '0.0058/hr'  # string
    t2.micro:
      vCPU:  1
      RAM:   1
      Price: '0.0116/hr'
    t2.medium:
      vCPU:  2
      RAM:   4
      Price: '0.0464/hr'
    t2.large:
      vCPU:  2
      RAM:   8
      Price: '0.0928/hr'
    m4.xlarge:
      vCPU:  4
      RAM:   16
      Price: '0.2/hr'
    m4.4xlarge:
      vCPU:  16
      RAM:   64
      Price: '0.8/hr'
    m4.16xlarge:
      vCPU:  64
      RAM:   256
      Price: '3.2/hr'
  AWSDBtoINFRA:
    db.m1.small:
      vCPU:      1
      Memory:    1.7 # in GiB
      Bandwidth: 0 # in Mbps
      Price:     
    db.m4.large:
      vCPU:      
      Memory:    
      Bandwidth: 
      Price:     
    db.r3.large:
      vCPU:     
      Memory:  
      Bandwidth: 
      Price:     
    db.m2.4xlarge:
      vCPU:      
      Memory: 
      Bandwidth: 
      Price:     

Metadata:

  Resources:
    VirtualMachine:
      Type: #string e.g., 'AWS::EC2::Instance'
      Condition: DefaultVPC
      InstanceProfile: !Ref CFNInstanceProfile
      SubnetId: !Ref VPCSubnet
    SecurityGroup:
      Type: #string 
    NetworkInterface:
      Type: #string 
    VirtualNetworks:
      Type: #string 
      Condition: CreateNewVPC
      Type: 'AWS::EC2::VPC'
    StorageAccount:
      Type: #string 
    DataBase:
      Type: #string 
    MySQLDatabase:
      Type: 'AWS::RDS::DBInstance'
    DomainControllerWaitCondition:
      Type: 'AWS::CloudFormation::WaitCondition'
    DomainControllerWaitHandle:
      Type: 'AWS::CloudFormation::WaitConditionHandle'
    DomainMemberSecurityGroupIngress1:
      Type: 'AWS::EC2::SecurityGroupIngress'

    LoadBalancer:
      Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    ALBListener:
      Type: 'AWS::ElasticLoadBalancingV2::Listener'
    ALBTargetGroup:
      Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    WebServerGroup:
      Type: 'AWS::AutoScaling::AutoScalingGroup'
    LaunchConfig:
      Type: 'AWS::AutoScaling::LaunchConfiguration'


    Conditions:
      DefaultVPC: !Equals 
        - !Ref VPCSelection
       - Default
      CreateNewVPC: !Equals 
        - !Ref VPCSelection
        - CreateNewVPC

    CFNRole:
      Type: 'AWS::IAM::Role'
      Properties:
        AssumeRolePolicyDocument:
          Statement:
            - Effect: Allow
              Principal:
                Service: !FindInMap 
                  - Region2Principal
                  - !Ref 'AWS::Region'
                  - EC2Principal
              Action:
                - 'sts:AssumeRole'
        Path: /
    CFNRolePolicy:
      Type: 'AWS::IAM::Policy'
      Properties:
        PolicyName: CloudFormerPolicy
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action:
                - 'autoscaling:Describe*'
                - 'cloudformation:Describe*'
                - 'cloudformation:List*'
                - 'cloudfront:List*'
                - 'cloudFront:Get*'
                - 'cloudtrail:Describe*'
                - 'cloudtrail:Get*'
                - 'cloudwatch:Describe*'
                - 'dynamodb:List*'
                - 'dynamodb:Describe*'
                - 'elasticbeanstalk:Describe*'
                - 'ec2:Describe*'
                - 'elasticloadbalancing:Describe*'
                - 'elasticache:Describe*'
                - 'rds:Describe*'
                - 'rds:List*'
                - 'route53:List*'
                - 'route53:Get*'
                - 's3:List*'
                - 's3:Get*'
                - 's3:PutObject'
                - 'sdb:Get*'
                - 'sdb:List*'
                - 'sns:Get*'
                - 'sns:List*'
                - 'sqs:Get*'
                - 'sqs:List*'
                - 'opsworks:Describe*'
                - 'redshift:Describe*'
                - 'kinesis:Describe*'
                - 'kinesis:List*'
              Resource: '*'
        Roles:
          - !Ref CFNRole


    Subnet:
      Condition: CreateNewVPC
      Type: 'AWS::EC2::Subnet'
      MapPublicIpOnLaunch: 'true'
      AvailabilityZone: !Select 
        - '0'
        - !GetAZs 
          Ref: 'AWS::Region'
      VpcId: !Ref VPC
    VPCInternetGateway:
      Condition: CreateNewVPC
      Properties: 
    VPCAttachGateway:
      Condition: CreateNewVPC
      Type: 'AWS::EC2::VPCGatewayAttachment'
      Properties:
        VpcId: !Ref VPC
        InternetGatewayId: !Ref VPCInternetGateway
    VPCRouteTable:
      Condition: CreateNewVPC
      Type: 'AWS::EC2::RouteTable'
        VpcId: !Ref VPC
      Properties:
        Tags:
          - Key: Name
            Value: CloudformerVPCRouteTable
        VpcId: !Ref VPC
    VPCSubnetRouteTableAssociation:
      Condition: CreateNewVPC
      Type: 'AWS::EC2::SubnetRouteTableAssociation'
    RouteVPCAny:
      Condition: CreateNewVPC
      Type: 'AWS::EC2::Route'
      CFNInstanceProfile:
        Type: 'AWS::IAM::InstanceProfile'
      DependsOn: VPCAttachGateway
      Properties:
        RouteTableId: !Ref VPCRouteTable
        DestinationCidrBlock: 0.0.0.0/0
        GatewayId: !Ref VPCInternetGateway

    VPCSubnetRouteTableAssociation:
      Properties:
        SubnetId: !Ref VPCSubnet
        RouteTableId: !Ref VPCRouteTable

    

    DomainControllerWaitCondition:
      DependsOn: DomainController
      Properties:
        Handle: !Ref DomainControllerWaitHandle
        Timeout: '1500'
    DomainControllerWaitHandle:
      Properties:
    DomainMemberSecurityGroupIngress1:
      Properties:
        GroupName: !Ref DomainMemberSecurityGroup
        IpProtocol: tcp
        FromPort: '3389'
        ToPort: '3389'
        CidrIp: !Ref SourceCidrForRDP

# Ref: https://www.ec2instances.info/
# http://docs.aws.amazon.com/zh_cn/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html
# Ref of VPC https://8kmiles.com/blog/azure-virtual-network-vs-aws-virtual-private-cloud/
# Domain Controller is an instance, forward to Azure AD
# VPC might be mapped to Virtual Network in Azure